ggplot(salaries, aes(x = year, y = salary)) +
geom_point(alpha = .1) +
geom_smooth(aes(col = gender, fill = gender), method = "loess") +
labs(x = "Year",
y = "Employee Salary for Year ($)",
title = "White House Salaries Since 2001") +
scale_color_manual(palette = c("maroon","lightblue"))
ggplot(salaries, aes(x = year, y = salary)) +
geom_point(alpha = .1) +
geom_smooth(aes(col = gender, fill = gender), method = "loess") +
labs(x = "Year",
y = "Employee Salary for Year ($)",
title = "White House Salaries Since 2001") +
scale_color_manual(values = c("maroon","lightblue"))
ggplot(salaries, aes(x = year, y = salary)) +
geom_point(alpha = .1) +
geom_smooth(aes(col = gender, fill = gender), method = "loess") +
labs(x = "Year",
y = "Employee Salary for Year ($)",
title = "White House Salaries Since 2001") +
scale_color_manual(values = c("maroon","blue"))
ggplot(salaries, aes(x = year, y = salary)) +
geom_point(alpha = .1) +
geom_smooth(aes(col = gender, fill = gender), method = "loess") +
labs(x = "Year",
y = "Employee Salary for Year ($)",
title = "White House Salaries Since 2001") +
scale_color_manual(values = c("gold","purple"))
ggplot(salaries, aes(x = year, y = salary)) +
geom_point(alpha = .1) +
geom_smooth(aes(col = gender, fill = gender), method = "loess") +
labs(x = "Year",
y = "Employee Salary for Year ($)",
title = "White House Salaries Since 2001") +
scale_color_manual(values = c("orange","darkgreen"))
ggplot(salaries, aes(x = year, y = salary)) +
geom_point(alpha = .1) +
geom_smooth(aes(col = gender, fill = gender), method = "loess") +
labs(x = "Year",
y = "Employee Salary for Year ($)",
title = "White House Salaries Since 2001") +
scale_color_manual(values = c("orange","darkgreen"),
labels = c("Women","Men"),
name = "Gender")
ggplot(salaries, aes(x = year, y = salary)) +
geom_point(alpha = .05) +
geom_smooth(aes(col = gender, fill = gender), method = "loess") +
labs(x = "Year",
y = "Employee Salary for Year ($)",
title = "White House Salaries Since 2001") +
scale_color_manual(values = c("orange","darkgreen"),
labels = c("Women","Men"))
ggplot(salaries, aes(x = year, y = salary)) +
geom_point(alpha = .05) +
geom_smooth(aes(col = gender, fill = gender), method = "loess") +
labs(x = "Year",
y = "Employee Salary for Year ($)",
title = "White House Salaries Since 2001") +
scale_color_manual(values = c("orange","darkgreen"))
ggplot(salaries, aes(x = year, y = salary)) +
geom_point(alpha = .05) +
geom_smooth(aes(col = gender, fill = gender), method = "loess") +
labs(x = "Year",
y = "Employee Salary for Year ($)",
title = "White House Salaries Since 2001") +
scale_color_discrete(name = "Gender",
breaks=c("female", "male"),
labels=c("Women", "Men"))
ggplot(salaries, aes(x = year, y = salary)) +
geom_point(alpha = .05) +
geom_smooth(aes(col = gender), method = "loess") +
labs(x = "Year",
y = "Employee Salary for Year ($)",
title = "White House Salaries Since 2001") +
scale_color_discrete(name = "Gender",
breaks=c("female", "male"),
labels=c("Women", "Men"))
ggplot(salaries, aes(x = year, y = salary)) +
geom_point(alpha = .05) +
geom_smooth(aes(col = gender), method = "loess") +
labs(x = "Year",
y = "Employee Salary for Year ($)",
title = "White House Salaries Since 2001") +
scale_color_discrete(name = "Gender",
values = c("lightblue", "maroon")
breaks=c("female", "male"),
labels=c("Women", "Men"))
ggplot(salaries, aes(x = year, y = salary)) +
geom_point(alpha = .05) +
geom_smooth(aes(col = gender), method = "loess") +
labs(x = "Year",
y = "Employee Salary for Year ($)",
title = "White House Salaries Since 2001") +
scale_color_discrete(name = "Gender",
values = c("lightblue", "maroon"),
breaks = c("female", "male"),
labels = c("Women", "Men"))
ggplot(salaries, aes(x = year, y = salary)) +
geom_point(alpha = .05) +
geom_smooth(aes(col = gender), method = "loess") +
labs(x = "Year",
y = "Employee Salary for Year ($)",
title = "White House Salaries Since 2001") +
scale_color_manual(name = "Gender",
values = c("lightblue", "maroon"),
breaks = c("female", "male"),
labels = c("Women", "Men"))
ggplot(salaries, aes(x = year, y = salary)) +
geom_point(alpha = .05) +
geom_smooth(aes(col = gender), method = "loess") +
labs(x = "Year",
y = "Employee Salary for Year ($)",
title = "White House Salaries Since 2001") +
scale_color_manual(name = "Gender",
values = c("blue", "maroon"),
breaks = c("female", "male"),
labels = c("Women", "Men"))
ggplot(salaries, aes(x = year, y = salary)) +
geom_point(alpha = .05) +
geom_smooth(aes(col = gender), method = "loess") +
labs(x = "Year",
y = "Employee Salary for Year ($)",
title = "White House Salaries Since 2001") +
scale_color_manual(name = "Gender",
values = c("green", "maroon"),
breaks = c("female", "male"),
labels = c("Women", "Men"))
ggplot(salaries, aes(x = year, y = salary)) +
geom_point(alpha = .05) +
geom_smooth(aes(col = gender), method = "loess") +
labs(x = "Year",
y = "Employee Salary for Year ($)",
title = "White House Salaries Since 2001") +
scale_color_manual(name = "Gender",
values = c("darkgreen", "maroon"),
breaks = c("female", "male"),
labels = c("Women", "Men"))
ggplot(salaries, aes(x = year, y = salary)) +
geom_point() +
geom_smooth(aes(col = gender), method = "loess") +
theme_minimal()
ggplot(salaries, aes(x = year, y = salary)) +
geom_point(alpha = .05) +
geom_smooth(aes(col = gender), method = "loess") +
theme_minimal()
salaries %>%
ggplot(aes(x = salary, fill = president)) +
geom_histogram()
salaries %>%
ggplot(aes(x = salary, fill = president)) +
geom_histogram(binwidth = 10000)
salaries %>%
ggplot(aes(x = salary, fill = president)) +
geom_histogram(binwidth = 1000)
salaries %>%
ggplot(aes(x = salary, fill = president)) +
geom_histogram(binwidth = 2500)
salaries %>%
filter(tenure >= 1 & tenure <= 5) %>%
ggplot(aes(tenure, salary, group = tenure)) +
geom_boxplot(aes(fill = as.factor(tenure))) +
scale_fill_brewer(palette = "Accent")
salaries %>%
ggplot(aes(x = salary, fill = president)) +
geom_histogram(binwidth = 5000)
ggplot(aes(tenure, salary, group = tenure)) +
geom_violin(aes(col = tenure,
fill = tenure),
show.legend = F) +
coord_flip()
salaries %>%
filter(tenure >= 1 & tenure <= 5) %>%
mutate(tenure = as.factor(tenure)) %>%
ggplot(aes(tenure, salary, group = tenure)) +
geom_violin(aes(col = tenure,
fill = tenure),
show.legend = F) +
coord_flip()
warnings()
salaries %>%
filter(tenure >= 1 & tenure <= 5) %>%
mutate(tenure = as.factor(tenure))
salaries %>%
filter(tenure >= 1 & tenure <= 5) %>%
mutate(tenure = factor(tenure))
salaries %>%
filter(between(tenure, 1, 5))
salaries %>%
filter(between(tenure, 1, 5)) %>%
mutate(tenure = factor(tenure))
factor(salaries$tenure)
salaries %>%
filter(between(tenure, 1, 5)) %>%
mutate(tenure_f = factor(tenure))
warnings()
%>%
ggplot(aes(tenure, salary, group = as.fatenure)) +
geom_violin(aes(col = tenure,
fill = tenure),
show.legend = F) +
coord_flip()
salaries %>%
ggplot(aes(tenure, salary, group = as.fatenure)) +
geom_violin(aes(col = tenure,
fill = tenure),
show.legend = F) +
coord_flip()
fill = as.factor(tenure)),
fill = as.factor(tenure),
ggplot(aes(tenure, salary, group = as.factor(tenure))) +
salaries %>%
salaries %>%
ggplot(aes(tenure, salary, group = as.factor(tenure))) +
geom_violin(aes(col = as.factor(tenure),
fill = as.factor(tenure),
show.legend = F)) +
coord_flip()
salaries %>%
ggplot(aes(tenure, salary, group = as.factor(tenure))) +
geom_violin(aes(col = as.factor(tenure),
fill = as.factor(tenure),
show.legend = F)) +
coord_flip() +
guide_legend(ncol = 2)
salaries %>%
ggplot(aes(tenure, salary, group = as.factor(tenure))) +
geom_violin(aes(col = as.factor(tenure),
fill = as.factor(tenure),
show.legend = F)) +
guide_legend(ncol = 2) +
coord_flip()
salaries %>%
filter(between(tenure, 1, 5)) %>%
ggplot(aes(tenure, salary, group = as.factor(tenure))) +
geom_violin(aes(col = as.factor(tenure),
fill = as.factor(tenure),
show.legend = F)) +
coord_flip()
salaries %>%
filter(tenure >= 1 & tenure <= 5) %>%
ggplot(aes(tenure, salary, group = tenure)) +
geom_boxplot(aes(fill = as.factor(tenure)), show.legend = F) +
scale_fill_brewer(palette = "Accent")
show.legend = F) +
salaries %>%
filter(between(tenure, 1, 5)) %>%
ggplot(aes(tenure, salary, group = as.factor(tenure))) +
geom_violin(aes(col = as.factor(tenure),
fill = as.factor(tenure),
show.legend = F)) +
coord_flip()
theme(legend.position="none") +
coord_flip()
salaries %>%
salaries %>%
filter(between(tenure, 1, 5)) %>%
ggplot(aes(tenure, salary, group = as.factor(tenure))) +
geom_violin(aes(col = as.factor(tenure),
fill = as.factor(tenure))) +
theme(legend.position="none") +
coord_flip()
salaries %>%
filter(between(tenure, 1, 5)) %>%
ggplot(aes(tenure, salary, group = as.factor(tenure))) +
geom_violin(aes(col = as.factor(tenure),
fill = as.factor(tenure))) +
theme(legend.position="none") +
coord_flip()
salaries %>%
ggplot(aes(tenure, salary, group = as.factor(tenure))) +
geom_violin(aes(col = as.factor(tenure),
fill = as.factor(tenure))) +
theme(legend.position="none") +
coord_flip()
salaries %>%
ggplot() +
geom_density(aes(salary, col = gender, fill = gender)) +
facet_grid(president ~ .)
salaries %>%
ggplot(aes(salary, col = gender, fill = gender)) +
geom_density(alpha = 0.4) +
facet_grid(president ~ .)
test <- tibble(x=c(1,2),y=c(2,1))
ggplot(test) + geom_line(size = 5)
ggplot(test, aes(x, y)) + geom_line()
ggplot(test, aes(x, y)) + geom_line(size = 5)
?ggsave
salaries %>%
ggplot(aes(salary, col = gender, fill = gender)) +
geom_density(alpha = 0.4) +
facet_grid(president ~ .) +
ggsave(here("results", "test_plot.pdf"))
salaries %>%
ggplot(aes(salary, col = gender, fill = gender)) +
geom_density(alpha = 0.4) +
facet_grid(president ~ .) +
ggsave(here("test_plot.pdf"))
salaries %>%
ggplot(aes(salary, col = gender, fill = gender)) +
geom_density(alpha = 0.4) +
facet_grid(president ~ .) +
ggsave(here("test_plot.pdf"), width = 5, height = 4)
salaries %>%
ggplot(aes(salary, col = gender, fill = gender)) +
geom_density(alpha = 0.4) +
facet_grid(president ~ .) +
ggsave(here("results", "test_plot.pdf"), width = 5, height = 4)
salaries <- read_csv(here("data","white-house-salaries.csv"))
library(tidyverse)
library(reshape2)
library(here)
salaries <- read_csv(here("data","white-house-salaries.csv"))
melt(salaries)
?cast
names(salaries)
employees <- dcast(melted, employee_name ~ salary + year)
melted <- melt(salaries)
employees <- dcast(melted, employee_name ~ salary + year)
melted
employees <- dcast(melted, employee_name ~ variable + year)
salaries <- read_csv(here("data","white-house-salaries.csv")) %>%
mutate(year_f = factor(year))
melted <- melt(salaries)
employees <- dcast(melted, employee_name ~ variable + year_f)
employees
salaries <- read_csv(here("data","white-house-salaries.csv")) %>%
mutate(year = factor(year))
salaries <- read_csv(here("data","white-house-salaries.csv")) %>%
mutate(year = factor(year))     # need year to not be numeric
melted <- melt(salaries)
employees <- dcast(melted, employee_name ~ variable + year_f)
employees <- dcast(melted, employee_name ~ variable + year)
employees
employees <- dcast(melted, employee_name ~ variable + year) %>%
as_tibble()
employees
select(melted, variable, salary)
select(melted, variable, value)
melted <- melt(salaries) %>% as_tibble()
select(melted, variable, value)
employees <- dcast(melted, employee_name ~ variable + year)
employees
employees <- dcast(melted, employee_name ~ variable + year) %>%
as_tibble()
employees
?gather
?separate
salaries %>%
separate(employee_name, last_name, first_mi, ", ")
salaries %>%
separate(employee_name, "last_name", "first_mi", ", ")
salaries %>%
separate(employee_name, "last_name", "first_mi", sep = ", ")
salaries %>%
separate(employee_name, last_name, first_mi, sep = ", ")
salaries %>%
separate(employee_name, into = c(last_name, first_mi), sep = ", ")
salaries %>%
separate(employee_name, into = c("last_name", "first_mi"), sep = ", ")
employees %>%
separate(employee_name, into = c("last_name", "first_mi"), sep = ", ")
?separate
employees %>%
separate(employee_name, into = c("last_name", "first_mi"), sep = ", ", extra = "merge")
?extract
employees <- employees %>%
extract(employee_name, into = c("first_name", "mi"), regex = "^([a-z ]+) ([a-z])$")
employees
employees <- employees %>%
extract(employee_name, into = c("first_name", "mi"), regex = "^([a-z ]*) ([a-z])$")
employees <- employees %>%
extract(first_mi, into = c("first_name", "mi"), regex = "^([a-z ]*) ([a-z])$")
employees <- employees %>%
separate(employee_name, into = c("last_name", "first_mi"), sep = ", ", extra = "merge")
employees <- dcast(melted, employee_name ~ variable + year) %>%
as_tibble()
employees <- employees %>%
separate(employee_name, into = c("last_name", "first_mi"), sep = ", ", extra = "merge")
employees
employees <- employees %>%
extract(first_mi, into = c("first_name", "mi"), regex = "^([a-z ]*) ([a-z])$")
employees
employees <- dcast(melted, employee_name ~ variable + year) %>%
as_tibble()
employees <- employees %>%
separate(employee_name, into = c("last_name", "first_mi"), sep = ", ", extra = "merge")
employees %>%
extract(first_mi, into = c("first_name", "mi"), regex = "^([a-z ?]*) ([a-z])$")
employees %>%
extract(first_mi, into = c("first_name", "mi"), regex = "^([a-z ]*) ?([a-z])?$")
employees <- employees %>%
extract(first_mi, into = c("first_name", "mi"), regex = "^([a-z]*) ([a-z])$", remove = F)
employees
advisors <- salaries %>%
filter(str_detect(position, "advisor")) %>%
select(position) %>%
unique()
advisors[1:3] %>% str_replace("advisor", "party")
str_replace(advisors, "advisor", "party")
advisors
advisors <- salaries %>%
filter(str_detect(position, "advisor")) %>%
.$position %>%          # using $ returns a vector instead of a data frame
unique()
str_replace(advisors, "advisor", "party")
?join
a <- tibble(name = c("Jen", "Chuck", "Kaitlyn", "Jose"),
age = (31, 47, 23, 25))
a <- tibble(name = c("Jen", "Chuck", "Kaitlyn", "Jose"),
age = c(31, 47, 23, 25))
b <- tibble(name = c("Jose", "Jen", "Chuck", "Gloria"),
gender = c("M", "F", "M", "F"))
inner_join(a, b)
left_join(a, b)
right_join(a, b)
?drop_na
?replace_na
subs <- list(age = 0, gender = "blank")
subs <- list(age = 0, gender = "blank")
replace_na(m, replace = subs)
m <- full_join(a, b)
replace_na(m, replace = subs)
?complete
?if
paste("The year is", year)
salaries <- read_csv(here("data","white-house-salaries.csv"))
library(here)
salaries <- read_csv(here("data","white-house-salaries.csv"))
t1 <- Sys.time()
for(a in 1:nrow(salaries)){
salaries$salary_ks[a] <- salaries$salary[a] / 1000
}
t1 <- Sys.time()
loop <- t2 - t1
salaries$salary / 1000
quietly(salaries$salary / 1000)
?quietly
?sink
invisible(salaries$salary / 1000)
str(vect)
vect <- t4 - t3
t3 <- Sys.time()
invisible(salaries$salary / 1000)   # suppress output
t4 <- Sys.time()
vect <- t4 - t3
t3 <- Sys.time()
invisible(salaries$salary / 1000)   # suppress output
t4 <- Sys.time()
vect <- t4 - t3
str(vect)
loop$difftime
vect$difftime
0.01929402 / 0.003953934 * 100
salaries <- read_csv(here("data","white-house-salaries.csv"))
names(salaries)
ols_1 <- lm(data = salaries,
salary ~ gender + tenure + year + term)
salaries <- read_csv(here("data","white-house-salaries.csv")) %>%
rename(name = employee_name) %>%
group_by(name) %>%
mutate(tenure = rank(year))
ols_1 <- lm(data = salaries,
salary ~ gender + tenure + year + term)
?scale
?lm
anova(ols_1)
ols_1 <- lm(salary ~ tenure + year + term + gender, data = salaries)
ols_2 <- lm(salary ~ tenure + year + term, data = salaries)
anova(ols_1, ols_2)
anova(ols_2, ols_1)
install.packages(ggfortify)
install.packages("ggfortify")
library(broom)
?lidy
?tidy
?glm
names(salaries)
tble(salaries$status)
table(salaries$status)
new_data
?predict
new_data$predict_prob <- predict(logit_1, new_data)
new_data <- tibble(precsident = c("bush", "obama", "trump"),
year = rep(mean(salaries$year), 3),
tenure = rep(mean(salaries$tenure), 3))
pred <- predict(logit_1, new_data, type = "response")
salaries <- mutate(salaries, woman = if_else(gender == "female", 1, 0))
logit_1 <- glm(woman ~ president + year + tenure,
family = binomial(),
data = salaries)
pred <- predict(logit_1, new_data, type = "response")
new_data <- tibble(president = c("bush", "obama", "trump"),
year = rep(mean(salaries$year), 3),
tenure = rep(mean(salaries$tenure), 3))
pred <- predict(logit_1, new_data, type = "response")
new_data$predict <- pred$fit
pred
pred <- predict(logit_1, new_data, type = "response", se.fit = T)
new_data$predict <- pred$fit
new_data$upper <- pred$fit - (1.96 * pred$se.fit)
new_data$lower <- pred$fit + (1.96 * pred$se.fit)
new_data
ggplot(new_data) +
geom_bar(aes(x = president, y = predicted, fill = "orange"))
pred <- predict(logit_1, new_data, type = "response", se.fit = T)
new_data$predicted <- pred$fit
new_data$lower <- pred$fit - (1.96 * pred$se.fit)
new_data$upper <- pred$fit + (1.96 * pred$se.fit)
new_data
ggplot(new_data) +
geom_bar(aes(x = president, y = predicted, fill = "orange")) +
geom_errorbar(aes(x = president, ymin = lower, ymax = upper))
